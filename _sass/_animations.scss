// Store animations here as mixins, and pull them into components accordingly.

// Sway
@mixin sway {
  @keyframes sway {

    0% {
      left: 0;
    }
  
    20% {
      left: 7.5%;
      max-width: 68%;
    }
  
    50% {
      left: 0;
      max-width: 66.666666666666667%;
    }
  
    80% {
      left: -7.5%;
      max-width: 68%;
    }
  
    100% {
      left: 0;
      max-width: 66.666666666666667%;
    }
  }
}


// Color blocks (accepts arguments for vertical or horizontal borders)
@mixin color-blocks($orientation: vertical, $background: false) {
  $dir1: null;
  $dir2: null;
  @if ($orientation == 'horizontal') {
    $dir1: left;
    $dir2: right;
  } @else if ($orientation == 'vertical') {
    $dir1: top;
    $dir2: bottom;
  } @else {
    @error 'Please pass an argument of either `horizontal` or `vertical`';
  }

  @keyframes color-blocks {

    0% {
      @if ($background) {
        background-color: $gym-magenta-dark;
      }
      
      border-#{$dir1}-color: $gym-magenta;
      border-#{$dir2}-color: $gym-magenta-darker;
    }

    20% {
      @if ($background) {
        background-color: $gym-magenta-dark;
      }
      
      border-#{$dir1}-color: $gym-magenta;
      border-#{$dir2}-color: $gym-magenta-darker;
    }

    35% {
      @if ($background) {
        background-color: $gym-teal-dark;
      }
      
      border-#{$dir1}-color: $gym-teal;
      border-#{$dir2}-color: $gym-teal-darker;
    }

    60% {
      @if ($background) {
        background-color: $gym-teal-dark;
      }
      
      border-#{$dir1}-color: $gym-teal;
      border-#{$dir2}-color: $gym-teal-darker;
    }

    75% {
      @if ($background) {
        background-color: $gym-green-dark;
      }
      
      border-#{$dir1}-color: $gym-green;
      border-#{$dir2}-color: $gym-green-darker;
    }

    90% {
      @if ($background) {
        background-color: $gym-green-dark;
      }
      
      border-#{$dir1}-color: $gym-green;
      border-#{$dir2}-color: $gym-green-darker;
    }

    100% {
      @if ($background) {
        background-color: $gym-magenta-dark;
      }
      
      border-#{$dir1}-color: $gym-magenta;
      border-#{$dir2}-color: $gym-magenta-darker;
    }
  }
}

@mixin color-blocks($orientation: vertical, $background: false) {

// @debug $gym-magenta-dark;
// @debug $gym-magenta-darker;

// @debug $gym-teal-dark;
// @debug $gym-teal-darker;

// @debug $gym-green-dark;
// @debug $gym-green-darker;

// @debug $gym-purple-dark;
// @debug $gym-purple-darker;

  $dir1: null;
  $dir2: null;
  @if ($orientation == 'horizontal') {
    $dir1: left;
    $dir2: right;
  } @else if ($orientation == 'vertical') {
    $dir1: top;
    $dir2: bottom;
  } @else {
    @error 'Please pass an argument of either `horizontal` or `vertical`';
  }

  @keyframes color-blocks {

    0% {
      @if ($background) {
        background-color: $gym-magenta-dark;
      }

      $border-color: $gym-magenta;

      @if $orientation == 'horizontal' {
        $border-color: $gym-magenta-dark;
      }
      
      border-#{$dir1}-color: $border-color;
      border-#{$dir2}-color: $gym-magenta-darker;
    }

    20% {
      @if ($background) {
        background-color: $gym-magenta-dark;
      }

      $border-color: $gym-magenta;

      @if $orientation == 'horizontal' {
        $border-color: $gym-magenta-dark;
      }
      
      border-#{$dir1}-color: $border-color;
      border-#{$dir2}-color: $gym-magenta-darker;
    }

    35% {
      @if ($background) {
        background-color: $gym-teal-dark;
      }

      $border-color: $gym-teal;

      @if $orientation == 'horizontal' {
        $border-color: $gym-teal-dark;
      }
      
      border-#{$dir1}-color: $border-color;
      border-#{$dir2}-color: $gym-teal-darker;
    }

    60% {
      @if ($background) {
        background-color: $gym-teal-dark;
      }
      
      $border-color: $gym-teal;

      @if $orientation == 'horizontal' {
        $border-color: $gym-teal-dark;
      }
      
      border-#{$dir1}-color: $border-color;
      border-#{$dir2}-color: $gym-teal-darker;
    }

    75% {
      @if ($background) {
        background-color: $gym-green-dark;
      }

      $border-color: $gym-green;

      @if $orientation == 'horizontal' {
        $border-color: $gym-green-dark;
      }
      
      border-#{$dir1}-color: $border-color;
      border-#{$dir2}-color: $gym-green-darker;
    }

    90% {
      @if ($background) {
        background-color: $gym-green-dark;
      }
      
      $border-color: $gym-green;

      @if $orientation == 'horizontal' {
        $border-color: $gym-green-dark;
      }
      
      border-#{$dir1}-color: $border-color;
      border-#{$dir2}-color: $gym-green-darker;
    }

    100% {
      @if ($background) {
        background-color: $gym-magenta-dark;
      }
      
      $border-color: $gym-magenta;

      @if $orientation == 'horizontal' {
        $border-color: $gym-magenta-dark;
      }
      
      border-#{$dir1}-color: $border-color;
      border-#{$dir2}-color: $gym-magenta-darker;
    }
  }
}


@mixin color-background {
  @keyframes color-background {

    0% {
      background-color: $gym-magenta;
    }

    20% {
      background-color: $gym-magenta;
    }

    35% {
      background-color: $gym-teal;
    }

    60% {
      background-color: $gym-teal;
    }

    75% {
      background-color: $gym-green;
    }

    90% {
      background-color: $gym-green;
    }

    100% {
      background-color: $gym-magenta;
    }
  }
}



@mixin ebb-flow {
  @keyframes ebb-flow {

    0% {
      background-position: 0% 50%;
    }
  
    50% {
      background-position: 100% 50%;
    }
  
    100% {
      background-position: 0% 50%;
    }
  }
}

// Fades animation
@mixin fades {
  @keyframes fade-1 {
    0% {
      opacity: 1;
    }
    20% {
      opacity: 0;
    }
    40% {
      opacity: 0;
    }
    60% {
      opacity: 0;
    }
    80% {
      opacity: 0;
    }
    100% {
      opacity: 1;
    }
  }
  @keyframes fade-2 {
    0% {
      opacity: 0;
    }
    20% {
      opacity: 1;
    }
    40% {
      opacity: 0;
    }
    60% {
      opacity: 0;
    }
    80% {
      opacity: 0;
    }
    100% {
      opacity: 0;
    }
  }
  @keyframes fade-3 {
    0% {
      opacity: 0;
    }
    20% {
      opacity: 0;
    }
    40% {
      opacity: 1;
    }
    60% {
      opacity: 0;
    }
    80% {
      opacity: 0;
    }
    100% {
      opacity: 0;
    }
  }
  @keyframes fade-4 {
    0% {
      opacity: 0;
    }
    20% {
      opacity: 0;
    }
    40% {
      opacity: 0;
    }
    60% {
      opacity: 1;
    }
    80% {
      opacity: 0;
    }
    100% {
      opacity: 0;
    }
  }
  @keyframes fade-5 {
    0% {
      opacity: 0;
    }
    20% {
      opacity: 0;
    }
    40% {
      opacity: 0;
    }
    60% {
      opacity: 0;
    }
    80% {
      opacity: 1;
    }
    100% {
      opacity: 0;
    }
  }
}


@mixin image-fade {
  @keyframes image-fade {

    0% {
      background: $gym-green url("{{ site.url }}/home/img/hero-webinar-12-2018/hero-webinar-12-2018-1920w-64px.png") no-repeat center center;
    }
  
    20% {
      background: $gym-green url("{{ site.url }}/home/img/hero-webinar-12-2018/hero-webinar-12-2018-1920w-48px.png") no-repeat center center;
    }
  
    40% {
      background: $gym-green url("{{ site.url }}/home/img/hero-webinar-12-2018/hero-webinar-12-2018-1920w-48px.png") no-repeat center center;
    }
  
    60% {
      background: $gym-green url("{{ site.url }}/home/img/hero-webinar-12-2018/hero-webinar-12-2018-1920w-32px.png") no-repeat center center;
      opacity: 1;
    }
  
    80% {
      background: $gym-green url("{{ site.url }}/home/img/hero-webinar-12-2018/hero-webinar-12-2018-1920w-32px.png") no-repeat center center;
      opacity: .5;
    }
  
    100% {
      background: $gym-green url("{{ site.url }}/home/img/hero-webinar-12-2018/hero-webinar-12-2018-1920w-32px.png") no-repeat center center;
      opacity: 0;
    }
  }
}

@mixin orbit {
  @keyframes orbit {
    from {
      top: 0;
      bottom: 0;
      left: 0;
      right: 0;
      margin: auto;
      transform: rotate(0deg) translateX(7.5em) translateY(-5.5em) rotate(0deg);
    }
    to {
      top: 0;
      bottom: 0;
      left: 0;
      right: 0;
      margin: auto;
      transform: rotate(360deg) translateX(7.5em) translateY(-5.5em) rotate(-360deg);
    }
  }
}
